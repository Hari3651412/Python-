
import numpy_creation as np

# 1. Array Creation
print("Array:", np.array([1, 2, 3]))
print("Zeros:", np.zeros((2, 3)))
print("Ones:", np.ones((2, 2)))
print("Empty:", np.empty((2, 2)))
print("Arange:", np.arange(0, 10, 2))
print("Linspace:", np.linspace(0, 1, 5))
print("Logspace:", np.logspace(1, 2, 5))
print("Eye:", np.eye(3))
print("Identity:", np.identity(3))
print("Full:", np.full((2, 2), 7))
print("Tile:", np.tile([1, 2], (2, 3)))
print("Repeat:", np.repeat([1, 2], 3))

# 2. Array Inspection
a = np.array([[1, 2, 3], [4, 5, 6]])
print("Shape:", a.shape)
print("NDIM:", a.ndim)
print("Size:", a.size)
print("Dtype:", a.dtype)
print("Itemsize:", a.itemsize)
print("Nbytes:", a.nbytes)

# 3. Reshaping
reshaped = a.reshape(3, 2)
print("Reshape:", reshaped)
print("Flatten:", reshaped.flatten())
print("Ravel:", reshaped.ravel())
print("Transpose:", reshaped.transpose())
print("T:", reshaped.T)
print("Expand Dims:", np.expand_dims(a, axis=0))
print("Squeeze:", np.squeeze(np.expand_dims(a, axis=0)))

# 4. Indexing & Slicing
print("Index:", a[1, 2])
print("Slice:", a[:, 1:3])
print("Where:", np.where(a > 3))
print("Take:", np.take(a, [0, 2]))
np.put(a, [0, 1], [9, 8])
print("Put:", a)
print("Extract:", np.extract(a > 4, a))
print("Nonzero:", np.nonzero(a))

# 5. Joining, Splitting & Stacking
b = np.array([[7, 8, 9], [10, 11, 12]])
print("Concatenate:", np.concatenate((a, b), axis=0))
print("Vstack:", np.vstack((a, b)))
print("Hstack:", np.hstack((a, b)))
print("Split:", np.split(a, 2))
print("Array Split:", np.array_split(a, 2))
print("Hsplit:", np.hsplit(a, 3))
print("Vsplit:", np.vsplit(np.vstack((a, b)), 2))

# 6. Mathematical Operations
x = np.array([1, 2, 3])
print("Add:", np.add(x, 5))
print("Subtract:", np.subtract(x, 1))
print("Multiply:", np.multiply(x, 3))
print("Divide:", np.divide(x, 2))
print("Power:", np.power(x, 2))
print("Mod:", np.mod(x, 2))
print("Exp:", np.exp(x))
print("Sqrt:", np.sqrt(x))
print("Log:", np.log(x))
print("Log10:", np.log10(x))
print("Log2:", np.log2(x))
print("Abs:", np.abs([-1, -2, 3]))
print("Ceil:", np.ceil([1.2, 2.5]))
print("Floor:", np.floor([1.2, 2.5]))
print("Round:", np.round([1.456, 2.567], 1))
print("Trunc:", np.trunc([1.9, 2.7]))
print("Cbrt:", np.cbrt(x))

# 7. Statistical Functions
y = np.array([[1, 2, 3], [4, 5, 6]])
print("Mean:", np.mean(y))
print("Median:", np.median(y))
print("Std:", np.std(y))
print("Var:", np.var(y))
print("Min:", np.min(y))
print("Max:", np.max(y))
print("Percentile:", np.percentile(y, 50))
print("Quantile:", np.quantile(y, 0.5))
print("Average:", np.average(y))
print("Corrcoef:", np.corrcoef([1, 2, 3], [4, 5, 6]))
print("Cov:", np.cov([1, 2, 3], [4, 5, 6]))
print("Histogram:", np.histogram([1, 2, 1, 2, 3]))
print("Bincount:", np.bincount([0, 1, 1, 2, 2, 2]))

# 8. Logical / Comparison
z = np.array([1, 2, 3])
print("All:", np.all(z > 0))
print("Any:", np.any(z > 2))
print("Equal:", np.equal(z, [1, 0, 3]))
print("Not Equal:", np.not_equal(z, [1, 0, 3]))
print("Greater:", np.greater(z, 2))
print("Less:", np.less(z, 2))
print("Greater Equal:", np.greater_equal(z, 2))
print("Less Equal:", np.less_equal(z, 2))
print("Logical And:", np.logical_and([True, False], [True, True]))
print("Logical Or:", np.logical_or([True, False], [False, False]))
print("Logical Not:", np.logical_not([True, False]))
print("IsClose:", np.isclose([1.0, 2.0], [1.0, 2.1]))
print("Array Equal:", np.array_equal([1, 2], [1, 2]))

# 9. Random Numbers
np.random.seed(42)
print("Rand:", np.random.rand(2, 3))
print("Randn:", np.random.randn(2, 3))
print("Randint:", np.random.randint(0, 10, (2, 3)))
print("Choice:", np.random.choice([10, 20, 30], size=(2, 2)))
print("Shuffle:")
arr = np.array([1, 2, 3, 4, 5])
np.random.shuffle(arr)
print(arr)
print("Permutation:", np.random.permutation([1, 2, 3, 4]))

# 10. Set Operations
x = np.array([1, 2, 3, 4])
y = np.array([3, 4, 5, 6])
print("Union:", np.union1d(x, y))
print("Intersection:", np.intersect1d(x, y))
print("Setdiff:", np.setdiff1d(x, y))
print("Setxor:", np.setxor1d(x, y))
print("In1d:", np.in1d(x, y))
print("Unique:", np.unique([1, 2, 2, 3, 4]))

# 11. Linear Algebra
A = np.array([[1, 2], [3, 4]])
B = np.array([[2, 0], [1, 2]])
print("Dot:", np.dot(A, B))
print("Matmul:", np.matmul(A, B))
print("Inner:", np.inner(A, B))
print("Outer:", np.outer([1, 2], [3, 4]))
print("Cross:", np.cross([1, 0, 0], [0, 1, 0]))
print("Inv:", np.linalg.inv(A))
print("Det:", np.linalg.det(A))
print("Eig:", np.linalg.eig(A))
print("Norm:", np.linalg.norm(A))
print("Solve:", np.linalg.solve(A, [5, 11]))

# 12. FFT (Fast Fourier Transform)
a = np.array([1, 2, 3, 4])
print("FFT:", np.fft.fft(a))
print("IFFT:", np.fft.ifft(np.fft.fft(a)))

# 13. Padding, Clipping, Broadcasting
print("Pad:", np.pad([1, 2, 3], (2, 2), mode='constant'))
print("Clip:", np.clip([1, 2, 3, 4, 5], 2, 4))
print("Broadcast:", np.broadcast_to([1, 2, 3], (3, 3)))

# 14. Datatype Conversion
a = np.array([1.1, 2.2, 3.3])
print("Astype int:", a.astype(int))
print("View:", a.view())
print("Copy:", a.copy())

# 15. Structured Arrays (Advanced Use)
dt = np.dtype([('name', 'S10'), ('age', 'i4')])
x = np.array([('Alice', 25), ('Bob', 30)], dtype=dt)
print("Structured array:", x)
print("Names:", x['name'])
print("Ages:", x['age'])
